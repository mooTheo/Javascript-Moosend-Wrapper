/**
 * Moosend API
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MoosendApi);
  }
}(this, function(expect, MoosendApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MoosendApi.CampaignsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CampaignsApi', function() {
    describe('aBTestCampaignSummary', function() {
      it('should call aBTestCampaignSummary successfully', function(done) {
        //uncomment below and update the code to test aBTestCampaignSummary
        //instance.aBTestCampaignSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('activityByLocation', function() {
      it('should call activityByLocation successfully', function(done) {
        //uncomment below and update the code to test activityByLocation
        //instance.activityByLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('campaignSummary', function() {
      it('should call campaignSummary successfully', function(done) {
        //uncomment below and update the code to test campaignSummary
        //instance.campaignSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloningAnExistingCampaign', function() {
      it('should call cloningAnExistingCampaign successfully', function(done) {
        //uncomment below and update the code to test cloningAnExistingCampaign
        //instance.cloningAnExistingCampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatingADraftCampaign', function() {
      it('should call creatingADraftCampaign successfully', function(done) {
        //uncomment below and update the code to test creatingADraftCampaign
        //instance.creatingADraftCampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletingACampaign', function() {
      it('should call deletingACampaign successfully', function(done) {
        //uncomment below and update the code to test deletingACampaign
        //instance.deletingACampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCampaigns', function() {
      it('should call getAllCampaigns successfully', function(done) {
        //uncomment below and update the code to test getAllCampaigns
        //instance.getAllCampaigns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignStatisticsWithPagingFiltered', function() {
      it('should call getCampaignStatisticsWithPagingFiltered successfully', function(done) {
        //uncomment below and update the code to test getCampaignStatisticsWithPagingFiltered
        //instance.getCampaignStatisticsWithPagingFiltered(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignsByPage', function() {
      it('should call getCampaignsByPage successfully', function(done) {
        //uncomment below and update the code to test getCampaignsByPage
        //instance.getCampaignsByPage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignsByPageAndPagesize', function() {
      it('should call getCampaignsByPageAndPagesize successfully', function(done) {
        //uncomment below and update the code to test getCampaignsByPageAndPagesize
        //instance.getCampaignsByPageAndPagesize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gettingAllYourSenders', function() {
      it('should call gettingAllYourSenders successfully', function(done) {
        //uncomment below and update the code to test gettingAllYourSenders
        //instance.gettingAllYourSenders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gettingCampaignDetails', function() {
      it('should call gettingCampaignDetails successfully', function(done) {
        //uncomment below and update the code to test gettingCampaignDetails
        //instance.gettingCampaignDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gettingSenderDetails', function() {
      it('should call gettingSenderDetails successfully', function(done) {
        //uncomment below and update the code to test gettingSenderDetails
        //instance.gettingSenderDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('linkActivity', function() {
      it('should call linkActivity successfully', function(done) {
        //uncomment below and update the code to test linkActivity
        //instance.linkActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('schedulingACampaign', function() {
      it('should call schedulingACampaign successfully', function(done) {
        //uncomment below and update the code to test schedulingACampaign
        //instance.schedulingACampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendingACampaign', function() {
      it('should call sendingACampaign successfully', function(done) {
        //uncomment below and update the code to test sendingACampaign
        //instance.sendingACampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testingACampaign', function() {
      it('should call testingACampaign successfully', function(done) {
        //uncomment below and update the code to test testingACampaign
        //instance.testingACampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unschedulingACampaign', function() {
      it('should call unschedulingACampaign successfully', function(done) {
        //uncomment below and update the code to test unschedulingACampaign
        //instance.unschedulingACampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatingADraftCampaign', function() {
      it('should call updatingADraftCampaign successfully', function(done) {
        //uncomment below and update the code to test updatingADraftCampaign
        //instance.updatingADraftCampaign(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
